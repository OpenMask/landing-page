{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/templates/pageTemplate.js","webpack:///./src/assets/images/pic04.jpg"],"names":["SEO","description","lang","meta","title","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Template","markdownRemark","data","frontmatter","html","Header","headerTitle","subtitle","headerSubtitle","id","className","src","pic04","alt","dangerouslySetInnerHTML","__html","pageQuery","module","exports"],"mappings":"keAKA,SAASA,EAAT,GAAiD,EAAlCC,YAAmC,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MAC9BC,EADuC,OACvCA,KAgBFC,EAAkBD,EAAKE,aAAaN,YAE1C,OACE,kBAAC,IAAD,CACEO,eAAgB,CACdN,QAEFE,MAAOA,EACPK,cAAa,QAAUJ,EAAKE,aAAaH,MACzCD,KAAM,CACJ,CACEO,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASP,GAEX,CACEQ,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASN,EAAKE,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAASP,GAEX,CACEM,KAAK,sBACLC,QAASL,IAEXQ,OAAOX,KAKfH,EAAIe,aAAe,CACjBb,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD,QCxEA,SAASgB,EAAT,GAA8B,IACjCC,EADgC,EAATC,KACvBD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAKhB,MAAOe,EAAYf,QACxB,kBAACiB,EAAA,EAAD,CAAQjB,MAAOe,EAAYG,YAAaC,SAAUJ,EAAYK,iBAC9D,yBAAKC,GAAG,QACJ,6BAASA,GAAG,UAAUC,UAAU,QAC5B,0BAAMA,UAAU,cAAa,yBAAKC,IAAKC,IAAOC,IAAI,MAElD,yBACAH,UAAU,eACVI,wBAAyB,CAAEC,OAAQX,QAvBvD,kFA8BO,IAAMY,EAAS,c,qBC9BtBC,EAAOC,QAAU,IAA0B","file":"component---src-templates-page-template-js-e4b892cd208433527394.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            githubURL\n            email\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from 'react'\n\n\nimport Layout from '../components/layout'\nimport Header from '../components/Header'\n// sample header\nimport pic04 from '../assets/images/pic04.jpg'\n\nimport SEO from \"../components/seo\"\n\nexport default function Template({ data, }) {\n    const { markdownRemark } = data\n    const { frontmatter, html } = markdownRemark\n    return (\n        <Layout>\n            <SEO title={frontmatter.title} />\n            <Header title={frontmatter.headerTitle} subtitle={frontmatter.headerSubtitle} />\n            <div id=\"main\">\n                <section id=\"content\" className=\"main\">\n                    <span className=\"image main\"><img src={pic04} alt=\"\" /></span>\n                    {/* inject content */}\n                    <div\n                    className=\"page-content\"\n                    dangerouslySetInnerHTML={{ __html: html}}\n                    />\n                </section>\n            </div>\n        </Layout>\n)}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        path\n        title\n        headerTitle\n        headerSubtitle\n      }\n    }\n  }`","module.exports = __webpack_public_path__ + \"static/pic04-1609dea61acb9e992d846c586683a226.jpg\";"],"sourceRoot":""}